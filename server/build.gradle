plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.github.sherter.google-java-format' version '0.9'
}

group = 'pl.com'
version = '1'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	def lombokVersion = '1.18.24'
	def jwtVersion = '0.11.2'
	def mapstructVersion = "1.5.5.Final"
	def vavrVersion = "1.0.0-alpha-4"

	def testContainersVersion = '1.17.3'
	def archUnitVersion = '1.0.1'
	def greenmailVersion = '1.6.11'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.flywaydb:flyway-core"
	implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	implementation "org.hibernate.validator:hibernate-validator"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.springframework.boot:spring-boot-starter-mail"
	implementation "io.vavr:vavr:${vavrVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	runtimeOnly "org.postgresql:postgresql"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
	testImplementation "org.testcontainers:junit-jupiter:1.18.1"
	testImplementation "com.icegreen:greenmail:${greenmailVersion}"
	testImplementation "com.icegreen:greenmail-junit5:${greenmailVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "com.tngtech.archunit:archunit-junit5:${archUnitVersion}"
	testImplementation "org.springframework.security:spring-security-test"

	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
}

googleJavaFormat {
	toolVersion = '1.12.0'
}

bootJar {
	archiveBaseName = 'school-system'
	mainClassName = 'pl.com.schoolsystem.SchoolSystemApplication'
}

task integrationTests(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
	useJUnitPlatform {
		includeTags "integration"
	}
	testLogging {
		exceptionFormat = 'full'
	}
}

tasks.named('test') {
	useJUnitPlatform {
		excludeTags "integration"
	}
	testLogging {
		exceptionFormat = 'full'
	}
}

tasks.register('testFormat', GradleBuild) {
	tasks = ['test', 'verifyGoogleJavaFormat']
}
